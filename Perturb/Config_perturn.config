
import os
import configparser 

path_to_m2l_files = '../Netcdf_map2l/'  # where the output from map2loop lives
path_to_perturb_models='../egen_runs/'  # where we will store the perturbed models
##  netCDF  file used 
netCDF_file_Name = 'wa1.loop3d'
egen_runs  = 5
DEM = False  # True or none
error_gps = 100
source_geomodeller=False


#############################
#      Perturbing params    #
#############################

[Parameter1]
global_Intf_Contact_Grp_type = False
Intf_Contact_Grp_type ='contacts'
distribution = 'uniform'


[Parameter2]
global_Ori_strati_Grp_type = False
Ori_strati_Grp_type = 'stratigraphicObservations'
kappa = 5
loc_distribution = 'normal'


[Parameter3]
global_Intf_Fault_Grp_type = False
Intf_Fault_Grp_type = 'faultObservations'
distribution = 'uniform'

[Parameter4]
global_Ori_Fault_Grp_type = True
Ori_Fault_Grp_type = 'faultObservations'
kappa = 5
loc_distribution = 'normal'

[Parameter4]
local_bool_Intf_Contact_Grp_type= False
Intf_Contact_Grp_type ='contacts'
distribution = 'uniform'
intf_contact_layerId = [4] #,13,11,9]


[Parameter4]
local_bool_Intf_Fault_Grp_type = False
Intf_Fault_Grp_type = 'faultObservations'
distribution = 'uniform'
intf_faultObservations_eventId =[2235] #,2235,11442]


[Parameter4]
local_bool_Ori_strati_Grp_type = False
Ori_strati_Grp_type = 'stratigraphicObservations'
kappa = 5
loc_distribution = 'normal'
Ori_strati_layerId =[15 ]#,18,9,20]



[Parameter4]
local_bool_Ori_Fault_Grp_type = False
Intf_Fault_Grp_type = 'faultObservations'
Ori_strati_Grp_type = 'stratigraphicObservations'
kappa = 5
loc_distribution = 'normal'
Ori_Fault_eventId =[11442]#,2235,11442]


path_interface = path_to_perturb_models + '/' + 'Interface'
path_Foliation = path_to_perturb_models + '/' + 'Foliation'
path_Drillhole = path_to_perturb_models + '/' + 'Drillhole'
path_interface_contacts = path_interface + '/' + 'contacts'
path_interface_faultObservations= path_interface + '/' + 'faultObservations'
path_Orientations_stratigraphicObservations = path_Foliation + '/' + 'stratigraphicObservations'
path_Orientations_faultObservations = path_Foliation + '/' + 'faultObservations'

if(not os.path.isdir(path_to_m2l_files)):
    os.mkdir(path_to_m2l_files)

if(not os.path.isdir(path_to_perturb_models)):
    os.mkdir(path_to_perturb_models)
    if(not os.path.isdir(path_interface)):
        os.mkdir(path_interface) 
    if(not os.path.isdir(path_Foliation)):
        os.mkdir(path_Foliation) 
    if(not os.path.isdir(path_Drillhole)):
        os.mkdir(path_Drillhole) 
    if(not os.path.isdir(path_interface_contacts)):
        os.mkdir(path_interface_contacts) 
    if(not os.path.isdir(path_interface_faultObservations)):
        os.mkdir(path_interface_faultObservations) 
    if(not os.path.isdir(path_Orientations_stratigraphicObservations)):
        os.mkdir(path_Orientations_stratigraphicObservations) 
    if(not os.path.isdir(path_Orientations_faultObservations)):
        os.mkdir(path_Orientations_faultObservations) 








#if(not os.path.isdir(fold_path)):
 #   os.mkdir(fold_path)    #>>os.mkdir(fold_path + '/' + 'Hi'))



# os.makedirs('/hey/hi/hello') 


